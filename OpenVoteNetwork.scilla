(* OpenVoteNetwork contract *)

(***************************************************)
(*                 Scilla version                  *)
(***************************************************)

scilla_version 0

(***************************************************)
(*               Associated library                *)
(***************************************************)
library OpenVoteNetwork

let tt = True
let ff = False

let not_owner_code  = Uint32 1
let action_not_valid_in_current_round_code = Uint32 2

let setup_define_t_signup_end_code  = Uint32 3
let setup_define_t_commit_end_code  = Uint32 4
let setup_define_t_vote_start_code  = Uint32 5
let setup_define_t_vote_end_code  = Uint32 6

let setup_add_voters_code = Uint32 7
let setup_remove_voters_code = Uint32 8

let setup_advance_from_setup_fail_no_signup_end_code = Uint32 9
let setup_advance_from_setup_no_vote_start_code = Uint32 10
let setup_advance_from_setup_no_vote_end_code = Uint32 11
let setup_advance_from_setup_tse_bef_tvs_code = Uint32 12
let setup_advance_from_setup_tvs_bef_tve_code = Uint32 13
let setup_advance_from_setup_tce_bef_tvs_code = Uint32 14
let setup_advance_from_setup_tce_aft_tse_code = Uint32 15

let setup_round = Uint32 0
let signup_round = Uint32 1
let commit_round = Uint32 2
let vote_round = Uint32 3
let tally_round = Uint32 4

type FieldSelector =
| SignupEnd
| CommitEnd
| VoteStart
| VoteEnd

type AdvanceSetupFails =
| NoSignupEnd
| NoVoteStart
| NoVoteEnd
| TseBefTvs
| TvsBefTve
| TceBefTvs
| TceAftTse

(***************************************************)
(*             The contract definition             *)
(***************************************************)

contract OpenVoteNetwork
(owner: ByStr20)

field round : Uint32 = setup_round
field voters : Map ByStr20 Bool = Emp ByStr20 Bool
field has_commit : Bool = False

field t0 : BNum = _creation_block
field t_signup_end : Option BNum = None {BNum}
field t_commit_end : Option BNum = None {BNum}
field t_vote_start : Option BNum = None {BNum}
field t_vote_end : Option BNum = None {BNum}


(***************************************************)
(*                   Procedures                    *)
(***************************************************)

(* setup_round procedures *)

procedure setup_define_t_aux(field_selector : FieldSelector, x : Uint32, relative_to_creation : Bool)
  t0v <- t0;
  r <- round;
  p = let is_owner = builtin eq owner _sender in
      let nil = None {BNum} in
      match is_owner with
    | False => 
      Pair {(Option BNum) Uint32} nil not_owner_code
    | True =>
      let is_setup_round = builtin eq r setup_round in
      match is_setup_round with
      | True =>
        let b0 = BNum 0 in
        let t_new = match relative_to_creation with
        | True => builtin badd t0v x
        | False => builtin badd b0 x
        end in
        let v = Some {BNum} t_new in
        let success_code = match field_selector with
          | SignupEnd => setup_define_t_signup_end_code
          | CommitEnd => setup_define_t_commit_end_code
          | VoteStart => setup_define_t_vote_start_code
          | VoteEnd => setup_define_t_vote_end_code
        end in
        Pair {(Option BNum) Uint32} v success_code
      | False =>
        Pair {(Option BNum) Uint32} nil action_not_valid_in_current_round_code
      end
    end;
  match p with
  | Pair v ec =>
    match v with
    | None => 
    | v => 
      match field_selector with
      | SignupEnd => t_signup_end := v
      | CommitEnd => t_commit_end := v
      | VoteStart => t_vote_start := v
      | VoteEnd => t_vote_end := v
      end;
      match field_selector with
      | SignupEnd =>
        e = {_eventname : "setup_define_t_signup_end"; code : ec};
        event e
      | CommitEnd =>
        e = {_eventname : "setup_define_t_commit_end"; code : ec};
        event e
      | VoteStart =>
        e = {_eventname : "setup_define_t_vote_start"; code : ec};
        event e
      | VoteEnd =>
        e = {_eventname : "setup_define_t_vote_end"; code : ec};
        event e
      end
    end
  end
end

procedure voter_action_aux(is_add : Bool, voter : ByStr20)
  is_owner = builtin eq owner _sender;
  match is_owner with
  | False =>
    match is_add with
    | True => 
      e = {_eventname : "add_voters"; code : not_owner_code};
      event e
    | False =>
      e = {_eventname : "remove_voters"; code : not_owner_code};
      event e
    end
  | True =>
    r <- round;
    is_setup_round = builtin eq r setup_round;
    match is_setup_round with
    | False => 
      match is_add with
      | True => 
        e = {_eventname : "add_voters"; code : action_not_valid_in_current_round_code};
        event e
      | False =>
        e = {_eventname : "remove_voters"; code : action_not_valid_in_current_round_code};
        event e
      end
    | True =>
      match is_owner with
      | True =>
        tt = True;
        voters[voter] := tt
      | False =>
        delete voters[voter]
      end;
      match is_add with
      | True =>
        e = {_eventname : "add_voters"; code : setup_add_voters_code};
        event e
      | False =>
        e = {_eventname : "remove_voters"; code : setup_remove_voters_code};
        event e
      end
    end
  end
end

procedure advance_from_setup_fail_aux(f : AdvanceSetupFails)
  match f with
  | NoSignupEnd =>
  e = {_eventname : "advance_from_setup"; code : setup_advance_from_setup_fail_no_signup_end_code};
  event e
  | NoVoteStart =>
  e = {_eventname : "advance_from_setup"; code : setup_advance_from_setup_no_vote_start_code};
  event e
  | NoVoteEnd =>
  e = {_eventname : "advance_from_setup"; code : setup_advance_from_setup_no_vote_end_code};
  event e
  | TseBefTvs =>
  e = {_eventname : "advance_from_setup"; code : setup_advance_from_setup_tse_bef_tvs_code};
  event e
  | TvsBefTve =>
  e = {_eventname : "advance_from_setup"; code : setup_advance_from_setup_tvs_bef_tve_code};
  event e
  | TceBefTvs =>
  e = {_eventname : "advance_from_setup"; code : setup_advance_from_setup_tce_bef_tvs_code};
  event e
  | TceAftTse =>
  e = {_eventname : "advance_from_setup"; code : setup_advance_from_setup_tce_aft_tse_code};
  event e
  end
end

procedure advance_from_setup_success(is_commit_round : Bool)
  has_commit := is_commit_round;
  round := signup_round
end

(***************************************************)
(*                   Transitions                   *)
(***************************************************)

(* setup_round transitions *)

transition setup_define_t_signup_end(x : Uint32, relative_to_creation : Bool)
  s = SignupEnd;
  setup_define_t_aux s x relative_to_creation
end

transition setup_define_t_commit_end(x : Uint32, relative_to_creation : Bool)
  s = CommitEnd;
  setup_define_t_aux s x relative_to_creation
end

transition setup_define_t_vote_start(x : Uint32, relative_to_creation : Bool)
  s = VoteStart;
  setup_define_t_aux s x relative_to_creation
end

transition setup_define_t_vote_end(x : Uint32, relative_to_creation : Bool)
  s = VoteEnd;
  setup_define_t_aux s x relative_to_creation
end

transition add_voters(voter : ByStr20)
  voter_action_aux tt voter
end

transition remove_voters(voter : ByStr20)
  voter_action_aux ff voter
end

transition advance_from_setup()
  tseo <- t_signup_end;
  tvso <- t_vote_start;
  tveo <- t_vote_end;
  tceo <- t_commit_end;
  match tseo with
  | Some tse =>
  match tvso with
  | Some tvs =>
  match tveo with
  | Some tve =>
  tse_before_tvs = builtin blt tse tvs;
  match tse_before_tvs with
  | True =>
  tvs_before_tve = builtin blt tvs tve;
  match tvs_before_tve with
  | True =>
  match tceo with
  | Some tce =>
  tce_after_tse = builtin blt tse tce;
  match tce_after_tse with
  | True =>
  tce_before_tvs = builtin blt tce tvs;
  match tce_before_tvs with
  | True => advance_from_setup_success tt
  | False =>
  f = TceBefTvs;
  advance_from_setup_fail_aux f
  end
  | False =>
  f = TceAftTse;
  advance_from_setup_fail_aux f
  end
  | None => advance_from_setup_success ff
  end
  | False =>
  f = TvsBefTve;
  advance_from_setup_fail_aux f
  end
  | False =>
  f = TseBefTvs;
  advance_from_setup_fail_aux f
  end
  | None =>
  f = NoVoteEnd;
  advance_from_setup_fail_aux f
  end
  | None => 
  f = NoVoteStart;
  advance_from_setup_fail_aux f
  end
  | None => 
  f = NoSignupEnd;
  advance_from_setup_fail_aux f
  end
end
